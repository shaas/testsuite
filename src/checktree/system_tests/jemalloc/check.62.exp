#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category 
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global check_need_running_system

# define a level initialization procedure:
set check_init_level_procedure "jemalloc_test_init_level"

# define test's name and run level descriptions
set check_name            "jemalloc_test"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   0
set check_description(0)  "basic test if compiled with jemalloc"

# define test's procedure order
set check_functions {}
lappend check_functions "jemalloc_verify"

proc jemalloc_test_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      0 {
         return 0
      }
   }

   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------


proc jemalloc_verify {} {
   global ts_config CHECK_USER
   
   set jemalloc_test_host [host_conf_get_suited_hosts 1 "lx24-amd64 lx26-amd64"]
   set binaries "qacct qconf qmod qping qrdel qrls qrstat qselect qstat sge_execd sge_qmaster sge_shepherd qalter qdel qhost qmon qquota qresub qrsh qrsub qsh qsub sge_coshepherd sgepasswd sge_shadowd"
   set errors ""
   set infos ""
   set envlist(JEMALLOC_TEST) "1"

   foreach binary $binaries {
      ts_log_fine $binary
      set output [start_sge_bin $binary "-help" $jemalloc_test_host "" prg_exit_state 60 "" "bin" "output_lines" envlist]

      # qmon -help may not work when the libXm is not availabe
      if {![string match "*usage*" $output] && $binary == "qmon"} {
         append infos "$binary -help on host $jemalloc_test_host did not return usage text!\nskipped this binary for jemalloc test!\n"
         append infos "This might happen when qmon cannot load libXm lib!\n"
         append infos "output was:\n$output"
         continue
      }
      if {![string match "*jemalloc is enabled*" $output]} {
         append errors "$binary -help on host $jemalloc_test_host does not return \"jemalloc is enabled\"\n"
         append errors "$binary does not use jemalloc\n"
         append errors "output was:\n$output"
      }
   }
   if {$errors != ""} {
      ts_log_severe $errors
   }
   if {$infos != ""} {
      ts_log_config $infos
   }
}
