#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

global check_functions  check_highest_level
global qdel_help_lines

set qdel_help_lines 11


# check job name and wildcard deletion tests

lappend check_functions "qdel_delete_by_job_name"        
lappend check_functions "qdel_delete_by_job_wildcard1"
lappend check_functions "qdel_delete_by_job_wildcard2"
lappend check_functions "qdel_delete_by_job_wildcard3"
lappend check_functions "qdel_delete_by_job_wildcard4"
lappend check_functions "qdel_delete_by_job_wildcard5"
lappend check_functions "qdel_delete_by_job_wildcard6"



#****** check.60/delete_by_job_name() ******************************************
#  NAME
#     delete_by_job_name() -- test helper function for qdel test
#
#  SYNOPSIS
#     delete_by_job_name { submit_name delete_name } 
#
#  FUNCTION
#     1) submit jobs with -N $submit_name
#     2) submit jobs with name -N "no_delete"
#     3) do qdel $delete_name
#     4) check that -N "no_delete" jobs still available
#     5) check that -N $submit_name jobs are done
#
#  INPUTS
#     submit_name - name of jobs to submit (which are deleted by qdel $delete_name)
#     delete_name - argument of qdel command
#
#*******************************************************************************
proc delete_by_job_name {submit_name delete_name} {
   global ts_config

   set testjob_count 2  ;# 2*2*2 = 8 Jobs
   set not_del_name "no_delete"

   set job_del_list {}
   set job_alive_list {}
   for {set i 0} {$i < $testjob_count} {incr i} {
      # submit jobs with name "test_job" 
      set job_list [submit_testjobs "" "" 2 "" 1 $submit_name]
      foreach job $job_list {
         lappend job_del_list $job
      }
      # submit jobs with name "no_delete"
      set job_list [submit_testjobs "" "" 2 "" 1 $not_del_name]
      foreach job $job_list {
         lappend job_alive_list $job
      }
   }

   # Now delete the jobs with name "$delete_name"
   set output [start_sge_bin "qdel" "\"$delete_name\""]
   ts_log_fine "qdel \"$delete_name\""
   ts_log_fine $output
   if {$prg_exit_state != 0} {
      ts_log_severe "qdel $delete_name failed:\n$output"
   }

   # Wait for deletion of correct jobs
   foreach job $job_del_list {
      wait_for_jobend $job $submit_name 60 0 1
   }
 
   # Other jobs must still be here
   get_extended_job_info ""
   foreach job $job_alive_list {
      if {[info exists job_info($job,state)]} {
         ts_log_fine "job $job (name=\"$job_info($job,name)\") has state \"$job_info($job,state)\""
      } else {
         ts_log_severe "job $job not found after deleting!"
      }
   }
   delete_all_jobs
   wait_for_end_of_all_jobs
}


proc qdel_delete_by_job_name {} {
   delete_by_job_name "test_job" "test_job"
}
proc qdel_delete_by_job_wildcard1 {} {
   delete_by_job_name "test_job" "t*_job"
}
proc qdel_delete_by_job_wildcard2 {} {
   delete_by_job_name "test_job" "*j*"
}
proc qdel_delete_by_job_wildcard3 {} {
   delete_by_job_name "test_job" "*job"
}
proc qdel_delete_by_job_wildcard4 {} {
   delete_by_job_name "test_job" "test_*"
}
proc qdel_delete_by_job_wildcard5 {} {
   delete_by_job_name "test_job" "tes?_job"
}
proc qdel_delete_by_job_wildcard6 {} {
   delete_by_job_name "test_job" "????????"
}
