#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define test's procedure order
lappend check_functions "test_issue245"
lappend check_functions "qhost_l_with_multiple_attributes"


proc test_issue245 {} {
   # qhost -l h=<hostname>

   #get arbitrary hostname
   set host [host_conf_get_suited_hosts]

   ts_log_fine "host $host selected for test"

   set args "-l h=$host"
   set results1 [qhost_parse plain job $args]

   if {[string first $host $plain(host0,name)] < 0} {
      ts_log_severe "qhost -l h=<hostname> test failed, wrong or no hostname returned!"
      return
   }

   if {[info exists plain(host1,name)]} {
      ts_log_severe "qhost -l h=<hostname> test failed, more than one hostname returned!"
      return
   }

   ts_log_fine "qhost -l h=hostname test ok!"
}


#****** display_test/qhost_l_with_multiple_attributes() ******
# 
#  NAME
#     qhost_l_with_multiple_attributes 
#
#  SYNOPSIS
#    This function will randomly choose one host name and one architecture
#    from the list of exection hosts and run qhost -l h=host arch=arch using
#    those two values.
#
#  FUNCTION
#     The function of this procedure is to test whether using the qhost -l with 
#     h=host can still be used with other attribute/value pairs afterwards.
#
#  EXAMPLE
#     qhost -l h=oin arch=aix51
#*******************************
proc qhost_l_with_multiple_attributes {} {
   get_current_cluster_config_array ts_config

   # get a list of all exection hosts
   set exec_hosts $ts_config(execd_nodes)

   # randomly choose a host name
   set host [host_conf_get_suited_hosts]
   set arch ""
   
   # randomly choose an arch for a host other than our chosen host
   foreach exec $exec_hosts {
      if {[string compare $host $exec] != 0} {
         set arch [resolve_arch $exec]
         break
      }       
   }
   
   # set our qhost arguments and submit the request
   set args "-l h=$host arch=$arch"
   ts_log_fine "submitting qhost $args"
   set results [qhost_parse plain job $args]

   # loop through the output from qhost and make sure that both the host and arch
   # we selected above are listed in the output
   set foundHost 0
   set foundArch 0
   for {set ind 0} {$ind < $job} {incr ind 1} {
      if {[string compare [string trim $plain(host$ind,name)] $host] == 0} {
         set foundHost 1
      }

      if {[string compare [string trim $plain(host$ind,arch_string)] $arch] == 0} {
         set foundArch 1
      }
   }

   # if not found give error as to why
   if {$foundHost != 1} {
      ts_log_severe "Expected to see host $host is qhost output, but it did not appear"
      return
   }

   if {$foundArch != 1} {
      ts_log_severe "Expected to see a host with arch $arch is qhost output, but it did not appear"     
      return
   }
   
   ts_log_fine "qhost -l h=hostname arch=arch test ok!"
}
