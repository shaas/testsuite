#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__


# define global variable in this namespace
global check_name 
global check_category 
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

#set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "spooledit_init_level"

# define test's name and run level descriptions
set check_name            "spooledit"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   0
set check_description(0)  "test spooledit"


# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function spooledit_setup
#set check_cleanup_function spooledit_cleanup



# define test's procedure order
set check_functions {}
lappend check_functions "spooledit_list"
lappend check_functions "spooledit_dump"

proc spooledit_init_level {} {
   global CHECK_ACT_LEVEL
   global ts_config

   switch -- $CHECK_ACT_LEVEL {
      "0" {
         return 0
      }
   }

   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------
#
# Currently we don't need setup/cleanup
proc spooledit_setup {} {
   global ts_config
   
   if {$ts_config(spooling_method) != "berkeleydb"} {
      ts_log_config "this test only works for spooling_method == berkeleydb"
   }
}

#proc spooledit_cleanup {} {
#}


proc spooledit_list {} {
   global ts_config

   if {$ts_config(spooling_method) != "berkeleydb"} {
      return
   }

   set output [start_sge_utilbin "spooledit" "list" $ts_config(master_host)]
   if {$prg_exit_state != 0} {
      ts_log_severe "spooledit list failed:\n$output"
   } else {
      parse_multiline_list output spooled_objects
      set num_objs [llength $spooled_objects]
      ts_log_fine "spooledit list reported $num_objs spooled objects"

      # TODO: we could do extended checks here, e.g. existance of certain objects
      if {$num_objs < 10} {
         ts_log_severe "spooledit list didn't find any spooled objects, output was\n$output"
      }
   }
}

proc spooledit_dump {} {
   global ts_config

   if {$ts_config(spooling_method) != "berkeleydb"} {
      return
   }

   # read the list of objects
   set output [start_sge_utilbin "spooledit" "list" $ts_config(master_host)]
   if {$prg_exit_state != 0} {
      ts_log_severe "spooledit list failed:\n$output"
      return
   }
   parse_multiline_list output spooled_objects

   # now dump every object
   ts_log_newline
   foreach obj $spooled_objects {
      ts_log_progress FINE "\r$obj                             \r"
      set output [start_sge_utilbin "spooledit" "dump $obj" $ts_config(master_host)]
      if {$prg_exit_state != 0} {
         ts_log_severe "spooledit dump $obj failed:\n$output"
      }
   }
}

