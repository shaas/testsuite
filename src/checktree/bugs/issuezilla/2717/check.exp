#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name
global check_category 
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "issue_2717_init_level"

# define test's name and run level descriptions
set check_name            "issue_2717"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   1
set check_description(0)  "test case for IZ 2717 - schedd_runlog is growing"


# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function issue_2717_setup
set check_cleanup_function issue_2717_cleanup

# define test's procedure order
set check_functions {}
lappend check_functions "issue_2717" ;# Test case for IZ2717 


proc issue_2717_init_level {} {
   global CHECK_ACT_LEVEL
   
   switch -- $CHECK_ACT_LEVEL {
      "0" {
         return 0 
      }
      default {
         return -1
      }

   }
   
   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------

proc issue_2717_setup {} {
     
}

proc issue_2717_cleanup {} {
   delete_all_jobs
   wait_for_end_of_all_jobs   
}

#****** file_procedures/get_file_content() *************************************
#  NAME
#     issue_2717() -- Check for bug 2717: schedd_runlog is growing endless 
#
#  SYNOPSIS
#     issue_2717 { } 
#
#  FUNCTION
#     Deletes the schedd_runlog file. Triggers the scheduling monitor. 
#     Measures the number of lines from the schedd_log file. 
#     Submits more jobs and checks if the file is growing.  
#     If so the bug is present because obly qconf -tsm will 
#     write output in the schedd_log file.
#
#*******************************************************************************
proc issue_2717 {} {
   global ts_config CHECK_USER 

   # set path to file 
   set path_to_file "$ts_config(product_root)/$ts_config(cell)/common/schedd_runlog"
   
   # check if file schedd_runlog in <cellname>/common/ exists 
   if {[is_remote_file $ts_config(master_host) root $path_to_file]} {
      ts_log_fine "schedd_runlog file exists already." 
      delete_remote_file $ts_config(master_host) root $path_to_file
   }
    
   # submit a sleeper 
   set job_id [submit_job "$ts_config(product_root)/examples/jobs/sleeper.sh 1"]
   
   # do a "qconf -tsm"
   trigger_scheduling
   
   # wait for end of job then the schedd_runlog must have been written 
   wait_for_jobend $job_id "Sleeper" 60 0 1
 
   # check file size: the file size should be stable till another qconf -tsm  
   get_file_content $ts_config(master_host) root $path_to_file original_content

   # wait two scheduling periods (by submitting two 1 sec sleeper)
   set job_id [submit_job "$ts_config(product_root)/examples/jobs/sleeper.sh 1"]
   wait_for_jobend $job_id "Sleeper" 60 0 1
   set job_id [submit_job "$ts_config(product_root)/examples/jobs/sleeper.sh 1"]
   wait_for_jobend $job_id "Sleeper" 60 0 1

   # compare the number of lines 
   get_file_content $ts_config(master_host) root $path_to_file content_afterwards
   if {$content_afterwards(0) > $original_content(0)} {
      ts_log_severe "schedd_runlog grew without doing >qconf -tsm<! It is likely do to bug IZ2717!"
   }   

   ts_log_fine "schedd_runlog seems to be stable!"
}   
