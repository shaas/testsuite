#!/vol2/TCL_TK/glinux/bin/expect --
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# Define the global veriables to give them back
global check_name check_description check_needs check_functions check_errno check_errstr check_highest_level
global check_init_level_procedure check_category
global check_root_access_needs
set check_init_level_procedure "issue_1715_init_level"

set check_category            "COMPATIBILITY SYSTEM VERIFIED"
set check_name                "issue_1715"
set check_description(0)      "qconf -aattr queue slots \"\[=1\]\" <queue> crashes qmaster"
set check_needs               "init_core_system"      ;# dependencies of this check (name of other check)
set check_root_access_needs   "no"

# setup and cleanup functions
set check_cleanup_function "issue_1715_cleanup"

# define test's procedure order
set check_functions           ""
lappend check_functions       "issue_1715_run"   ;# functions to call (in order)
set check_highest_level       0

proc issue_1715_init_level {} {
   global CHECK_ACT_LEVEL ts_config

   # setup levels 
   switch -- $CHECK_ACT_LEVEL {
      "0"  { 
         return 0
      }
   }

   return -1
}

proc issue_1715_run  {} {
   global ts_config CHECK_ARCH CHECK_OUTPUT CHECK_USER CHECK_HOST CHECK_CORE_MASTER
   set queue_name "@$CHECK_HOST"
   set qmaster_arch [resolve_arch $CHECK_CORE_MASTER]

   if { [string match $qmaster_arch "lx24*" ] == 1  } {
      add_proc_error ssue_1715 -3 "test cannot kill qmaster on lx24 because of defect threading library - testsuite will block and never quit"
      set_error 0 "ok"
      return

   }

   set output [start_remote_prog $CHECK_HOST $CHECK_USER "$ts_config(product_root)/bin/$CHECK_ARCH/qconf" "-aattr queue slots \"\[\=1\]\" all.q" result 10 ]

   set macro [ sge_macro MSG_SGETEXT_INVALIDHOST_S ]
   puts $CHECK_OUTPUT $macro
   set INVALIDHOST [translate $ts_config(master_host) 1 0 0 [sge_macro MSG_SGETEXT_INVALIDHOST_S] "dummy" ]
   set INVALIDHOST [replace_string $INVALIDHOST "dummy" "" ] 
   puts $CHECK_OUTPUT $INVALIDHOST
   set output [ string trim $output ]
   set INVALIDHOST [ string trim $INVALIDHOST ]
   puts $CHECK_OUTPUT "$output compared to $INVALIDHOST"
   
   if { [ string match $output $INVALIDHOST ] == 0 } {
      add_proc_error "issue_1715" -1 "issue 1715 still exists, qconf -aattr queue slots \"\[=1\]\" <queue>  crashes qmaster"
   }
   set_error 0 "ok"
}

proc issue_1715_cleanup {} {
   global CHECK_CORE_MASTER

   shutdown_qmaster $CHECK_CORE_MASTER [get_qmaster_spool_dir]
   startup_qmaster 0
}
