#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__


# define global variable in this namespace
global check_name 
global check_category 
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

#set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "issue_1661_init_level"

# define test's name and run level descriptions
set check_name            "issue_1661"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   0
set check_description(0)  "Test IP string host name resolving"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions

# define test's procedure order
set check_functions ""
lappend check_functions "issue_1661_test"

proc issue_1661_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      "0" {
         return 0
      }
   }

   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------

proc issue_1661_test {} {
   global ts_config CHECK_OUTPUT

   set output [start_sge_utilbin "gethostname" "" $ts_config(master_host)]
   set line [split $output "\n"]
   foreach ln $line {
      if {[string match "*Address*" $ln]} {
         set ip_address [split $ln ":"]
         set ip_address [lindex $ip_address 1]
         set ip_address [string trim $ip_address]
         puts $CHECK_OUTPUT "host \"$ts_config(master_host)\"'s IP: \"$ip_address\""
      }
   }

   set name_resolve_name [start_sge_utilbin "gethostbyname" "-aname $ts_config(master_host)" $ts_config(master_host)]
   set name_resolve_name [string trim $name_resolve_name]
   puts $CHECK_OUTPUT "resolving of \"$ts_config(master_host)\" returns \"$name_resolve_name\""

   set ip_resolve_name [start_sge_utilbin "gethostbyname" "-aname $ip_address" $ts_config(master_host)]
   set ip_resolve_name [string trim $ip_resolve_name]
   puts $CHECK_OUTPUT "resolving of \"$ip_address\" returns \"$ip_resolve_name\""

   if {[string compare $ip_resolve_name $name_resolve_name] != 0} {
      add_proc_error "issue_1661_test1" -1 "ip address \"$ip_address\" not resolved to host name \"$name_resolve_name\"\nissue 1661 is present"
   }
}


