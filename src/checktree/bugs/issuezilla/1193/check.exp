#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "issue_1193_init_level"

# define test's name and run level descriptions
set check_name            "issue_1193"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "Test if deletion of non-existing value is done correctly."

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function "issue_1193_setup"
set check_cleanup_function "issue_1193_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_1193_check"

proc issue_1193_init_level {} {
  global CHECK_ACT_LEVEL

  switch -- $CHECK_ACT_LEVEL {
     "0" { 
           return 0    
     } 
  } 
  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------
global queue_name


proc issue_1193_setup { } {
   global queue_name    
   global check_host

   # create queue (and delete before)
   ts_log_fine "Create new default queue with 1 slot!"

   set queue_name "new_queue"
   set change_queue(slots) 1   

   set check_host [host_conf_get_suited_hosts]

   if {[add_queue $queue_name $check_host change_queue] != 0 } {
      # no error expected 
      ts_log_severe "Error while creating a regular queue with 1 slot!"
   }


}


proc issue_1193_check { } {
   global queue_name 
   global check_host

   # -----------------------------------------------------
   # Make sure that bug described in #1175 is not present:
   # -----------------------------------------------------

   # Read the default queue slot setting  
   get_queue $queue_name 
   ts_log_fine "queue returned status: slots = $result(slots) !" 
   set slots_before $result(slots) 

   # write an pseudo number
   set result(slots) 2 
   
   # try to remove a sublist setting (which is not inside) from slots
   # -> qconf -dattr queue slots 5 all.q@es-ergb01-01
   set result_dattr [start_sge_bin "qconf" "-dattr queue slots 5 $queue_name@$check_host"]
   ts_log_fine "result $result_dattr"

   # check the default slots setting (if the removed setting was set)
   # there is an bug present when the default slots setting has changed! 
   get_queue $queue_name 
   ts_log_fine "queue returned status: slots = $result(slots) !" 
   set slots_after $result(slots)

   if { $slots_before != $slots_after } {
      # Bug detected! 
      ts_log_severe "Error! Slots attribute changed after deleting a missing attribute!" 
   }
    
}


proc issue_1193_cleanup { } {
   global queue_name  
   
   # delete queue 
   del_queue $queue_name "" 1 1 
}

