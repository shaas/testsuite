#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_errno 
global check_errstr 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"


# define a level initialization procedure:
set check_init_level_procedure "issue_540_init_level"

# define test's name and run level descriptions
set check_name            "issue_540"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "file specification for qsub was changed as well, as the hostname resolving during job submission"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_cleanup_function "issue_540_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_540_check"

proc issue_540_init_level {} {
   global CHECK_ACT_LEVEL

  switch -- $CHECK_ACT_LEVEL {
     "0" { 
           return 0    
     } 
  } 

  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_540_check {} {
   global ts_config
   global CHECK_OUTPUT env CHECK_USER
 
   #
   # Scenario:
   #
   set job_name "Sleeper"
   set job_script "$ts_config(product_root)/examples/jobs/sleeper.sh"
   set job_sleep_time "2"
   set job_output_file "out:put.txt"
   set user_home $env(HOME)
   puts "user_home:$user_home"

   set host [lindex $ts_config(execd_nodes) 0]

   delete_remote_file $host $CHECK_USER $user_home/$job_output_file

   # first test should fail - We submit two logfiles for the default host. 
   set qsub_arguments "-l h=$host -o :$job_output_file,:$job_output_file $job_script $job_sleep_time"
   set job_id [submit_job $qsub_arguments 0]
   if { $job_id > 0 } {
      add_proc_error "issue_540_check" "-1" "qsub accepted the invalid option -o :out:put.txt,:out:put1.txt"
   }

   #second test should fail - We submit a logfile for a not existing host
   set qsub_arguments "-l h=$host -o qwdfvb:$job_output_file $job_script $job_sleep_time"
   set job_id [submit_job $qsub_arguments 0]
   if { $job_id > 0 } {
      add_proc_error "issue_540_check" "-1" "qsub accepted an invalid host in the -o qwdfvb:out:put.txt option"   
   }

   #third test should pass - We submit a logfile with a ":" inside. This shoud be accepted
   set qsub_arguments "-l h=$host -o :$job_output_file $job_script $job_sleep_time"
   set job_id [submit_job $qsub_arguments 0]
   wait_for_jobstart $job_id $job_name 300
   wait_for_jobend $job_id $job_name 20

   # on slow NFS, it may take some time for outputfile to be visible
   set result [wait_for_remote_file $host $CHECK_USER $user_home/$job_output_file 120]

   if { $result != 0 } {
      add_proc_error "issue_540_check" "-1" "qsub did not create the specified output file $job_output_file on host $host"
   } else {
      delete_remote_file $host $CHECK_USER $user_home/$job_output_file
   }

   set_error 0 "ok"
}

proc issue_540_cleanup  {} {
   global CHECK_OUTPUT

   delete_all_jobs
   wait_for_end_of_all_jobs 60

   set_error 0 "ok"
}



