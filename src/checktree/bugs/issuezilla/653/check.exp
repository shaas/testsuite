#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "issue_653_init_level"

# define test's name and run level descriptions
set check_name            "issue_653"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "Check if altering deadline is done correctly."

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function "issue_653_setup"
set check_cleanup_function "issue_653_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_653_check"

proc issue_653_init_level {} {
  global CHECK_ACT_LEVEL

  switch -- $CHECK_ACT_LEVEL {
     "0" { 
           return 0    
     } 
  } 
  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_653_setup { } {
   global CHECK_USER

   # make a clean env 
   # create grid users  
   del_user $CHECK_USER "" "" 0 
   add_user $CHECK_USER "" 0 "" "" 0

}


proc issue_653_check { } {
   global CHECK_USER
   global ts_config 

   set userset "deadlineusers" 
   set deadline "deadline"
   set change_array(entries) $CHECK_USER

   # modify userlist deadlineuser: add check_user 
   ts_log_fine "Add user to deadlineusers list."
   if {[mod_userset $userset change_array 0] != 0} {
      # it was not possible to add user to deadlineusers list 
      ts_log_severe "Error! Adding user to deadlineusers list was not possible!"
   } 

   # submit sleeper job with delay 
   # qsub -dl 01281700 /examples/jobs/sleeper 6000
   ts_log_fine "Submit job with deadline!"
   set job_id_u1_1 [submit_job " -dl 01281700 $ts_config(product_root)/examples/jobs/sleeper.sh 3600"] 
   ts_log_fine "Job ID is: $job_id_u1_1" 
   
   # check job info 
   ts_log_fine "Get job account information (deadline)..."   
   get_qstat_j_info $job_id_u1_1 
   
   ts_log_fine "Deadline is: $qstat_j_info($deadline)"

   # get the deadline 
   set u_deadline $qstat_j_info($deadline)

   # alter sleeper job to another delay 
   # qalter -dl 01311900 <job id > 
   ts_log_fine "Alter job: set new deadline!"
   set output [start_sge_bin "qalter" "-dl 01311900 $job_id_u1_1"]

   # check if deadline is changed 
   # qstat -j   
   ts_log_fine "Get job account information (deadline)..."   
   get_qstat_j_info $job_id_u1_1 

   ts_log_fine "Deadline is: $qstat_j_info($deadline)"

   if {[string compare "$qstat_j_info($deadline)" "$u_deadline"] == 0} {
      # error deadline didn't change 
      ts_log_severe "Error! deadline didn't change"          
   } 
}


proc issue_653_cleanup {} {
   global CHECK_USER

   # delete jobs 
   delete_all_jobs
   wait_for_end_of_all_jobs
   # delete user
   del_user $CHECK_USER   
}

