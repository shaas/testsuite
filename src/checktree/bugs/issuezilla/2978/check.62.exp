#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name
global check_category
global check_description
global check_needs
global check_functions
global check_highest_level
global check_init_level_procedure
global check_root_access_needs

set check_root_access_needs "no"

# define a level initialization procedure:
set check_init_level_procedure "issue_2978_init_level"

# define test's name and run level descriptions
set check_name            "issue_2978"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   0
set check_description(0)  "fix qacct does not resolve complex shortcut names"

# define test's dependencies
set check_needs           "init_core_system"

# setup and cleanup functions
set check_setup_function issue_2978_setup
set check_cleanup_function issue_2978_cleanup

# define test's procedure order
set check_functions {}
lappend check_functions "issue_2978_test1"

proc issue_2978_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      0 {
         return 0
      }
   }

   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------

proc issue_2978_setup {} {
}

proc issue_2978_cleanup {} {
   delete_all_jobs
   wait_for_end_of_all_jobs
}

proc issue_2978_test1 {} {
   global ts_config

   set test_host [host_conf_get_suited_hosts]
   set arch [resolve_arch $test_host]

   set job_id [submit_job "$ts_config(product_root)/examples/jobs/sleeper.sh 1" 1 60 $test_host]
   wait_for_jobstart $job_id "Sleeper" 30 1 1
   wait_for_jobend $job_id "Sleeper" 30 0 1
   get_qacct $job_id

   set args "-l arch=$arch"
   ts_log_fine "executing qacct $args"
   set result [start_sge_bin "qacct" $args]

   set args_shortcut_name "-l a=$arch"
   ts_log_fine "executing qacct $args_shortcut_name"
   set result_shortcut_name [start_sge_bin "qacct" $args_shortcut_name]

   if { [string compare "$result" "$result_shortcut_name"] != 0 } {
      ts_log_fine "RESULT qacct $args:\n$result"
      ts_log_fine "RESULT qacct $args_shortcut_name:\n$result_shortcut_name"
      ts_log_severe "different outputs qacct did not resolve complex shortcut names"
   }
}
