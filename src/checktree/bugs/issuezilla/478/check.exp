#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_errno 
global check_errstr 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"


# define a level initialization procedure:
set check_init_level_procedure "issue_478_init_level"

# define test's name and run level descriptions
set check_name            "issue_478"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "qtstat -r shows wrong dependencies"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_cleanup_function "issue_478_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_478_check"

proc issue_478_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      "0" { 
         return 0    
      } 
   }

   return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_478_check {} {
   global CHECK_OUTPUT CHECK_PRODUCT_ROOT CHECK_ARCH CHECK_USER
   global ts_config 

   # initialize parameter
   set job_name "n1"
   set N_option "-N $job_name"
   set h_option "-h"
   set job_script "$CHECK_PRODUCT_ROOT/examples/jobs/sleeper.sh 120"
   set qstat_command "$CHECK_PRODUCT_ROOT/bin/$CHECK_ARCH/qstat"

   if { $ts_config(gridengine_version) == 53} {
      set grep_pattern "Predecessor Jobs:"
      set formatstring "       Predecessor Jobs: %d, %s"
   } else {
      set grep_pattern "Predecessor Jobs (request):"
      set formatstring "       Predecessor Jobs (request): %d, %s"
   }

   # qsub -h $SGE_ROOT/examples/jobs/sleeper.sh 120
   set qsub_arguments "$h_option $job_script"
   set job_id1 [submit_job $qsub_arguments]

   # qsub -N n1 -h $SGE_ROOT/examples/jobs/sleeper.sh 120
   set qsub_arguments "$N_option $h_option $job_script"
   set job_id2 [submit_job $qsub_arguments]

   # qsub -hold_jid <job_id1>,n1 $SGE_ROOT/examples/jobs/sleeper.sh 120
   set hold_jid_option "-hold_jid $job_id1,$job_name"
   set qsub_arguments "$hold_jid_option $job_script"
   set job_id3 [submit_job $qsub_arguments]

   # qstat -r output has to contain following output: 
   #    "Predecessor Jobs: <job_id1>,n1"
   set qstatresult [ catch { eval exec "$qstat_command -r \| grep \"$grep_pattern\"" } qstatoutput ]
   scan $qstatoutput $formatstring out_id out_name

   if { ( [ string compare $job_id1 $out_id ] != 0 ) || \
        ( [ string compare $job_name $out_name] != 0 ) } {
      puts [format " expeced output: $formatstring" $job_id1 $job_name]
      puts "qstat -r output: $qstatoutput"
      add_proc_error "issue_478_check" "-1" \
                     "qstat -r output is not corrrect for predecessor Jobs"
      return
   }

   # cleanup
   delete_job $job_id3 "1"
   delete_job $job_id2 "1"
   delete_job $job_id1 "1"

   set_error 0 "ok"
}

proc issue_478_cleanup  {} {
   global CHECK_OUTPUT

   delete_all_jobs

   set_error 0 "ok"
}

