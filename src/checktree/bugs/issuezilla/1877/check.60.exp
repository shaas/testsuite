#!/vol2/TCL_TK/glinux/bin/expect --
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# Define the global veriables to give them back
global check_name check_description check_needs check_functions check_errno check_errstr check_highest_level
global check_init_level_procedure check_category
global check_root_access_needs
global stree tmp_name

# setup and cleanup functions
set check_cleanup_function issue_1877_cleanup

set check_init_level_procedure "issue_1877_init_level"

set check_category            "COMPATIBILITY SYSTEM VERIFIED"
set check_name                "issue_1877"
set check_description(0)      "job finish although terminate method is still running"
set check_needs               "init_core_system"      ;# dependencies of this check (name of other check)
set check_root_access_needs   "no"

# setup and cleanup functions
set check_setup_function "issue_1877_setup"
set check_cleanup_function "issue_1877_cleanup"

# define test's procedure order
set check_functions           ""
lappend check_functions       "issue_1877_run"   ;# functions to call (in order)

set check_highest_level       0

#
# Scenario:
#     setup:
#        define a terminate method (sleep 30) for all.q
#
#     run:
#        submit a sleeper 15
#        wait for start of sleeper
#        get start_time
#        delete job
#        wait for job deletion
#        get end_time
#        end_time - start_time has to be >= 30s
#
#     cleanup:
#        delete all jobs
#        remove the terminate method
#

proc issue_1877_init_level {} {
   global CHECK_ACT_LEVEL ts_config

   # setup levels 
   switch -- $CHECK_ACT_LEVEL {
      "0" {
         return 0
      }
   }
   return -1  ;# no other level else
}

proc issue_1877_setup  {} {
   global ts_config CHECK_OUTPUT CHECK_PRODUCT_ROOT CHECK_ARCH CHECK_USER

   set new_values(terminate_method) "$CHECK_PRODUCT_ROOT/examples/jobs/sleeper.sh 30 0"
   mod_queue "all.q" "" new_values

#   wait_for_enter

   set_error 0 "ok"
}

proc issue_1877_cleanup  {} {
   global ts_config CHECK_OUTPUT CHECK_PRODUCT_ROOT CHECK_ARCH CHECK_USER

   set new_values(terminate_method) "NONE"
   mod_queue "all.q" "" new_values

   set_error 0 "ok"
}

proc issue_1877_run  {} {
   global ts_config CHECK_USER CHECK_HOST CHECK_PRODUCT_ROOT CHECK_OUTPUT

   # submit a job (sleeper 30)
   set arguments "$CHECK_PRODUCT_ROOT/examples/jobs/sleeper.sh 15"
   set job_id1 [ submit_job "$arguments" ]

   # wait for job start
   wait_for_jobstart $job_id1 "Sleeper" 20 1 1
   set mytime [ expr ( [timestamp] + 30 ) ]

   #delete the job
   delete_job $job_id1

   #wait for job exit
   wait_for_jobend $job_id1 "Sleeper" 60 
   set nowtime [timestamp]

   #job has to run at least 30 seconds (terminate method run time)
   if { $nowtime < $mytime } {
      add_proc_error "issue_1877_run" -1 "issue 1877 is present"
   }

   set_error 0 "ok"
}
