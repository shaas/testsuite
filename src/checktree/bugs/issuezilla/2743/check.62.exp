#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__


# define global variable in this namespace
global check_name 
global check_category 
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs

set check_root_access_needs "yes"

# define a level initialization procedure:
set check_init_level_procedure "issue_2743_init_level"

# define test's name and run level descriptions
set check_name            "issue_2743"
set check_category        "COMPATIBILITY SYSTEM VERIFIED"
set check_highest_level   9
set check_description(0)  "h_rt limit enforcement gets delayed in case of execd restart"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_setup_function issue_2743_setup
set check_cleanup_function issue_2743_cleanup

# define test's procedure order
set check_functions {}
lappend check_functions "issue_2743_test"

proc issue_2743_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      0 {
         return 0
      }
   }

   return -1  ;# no other level
}

# -------- local test procedures: initialization------------------------------

proc issue_2743_setup {} {
   set sched_conf(flush_submit_sec) 1
   set sched_conf(flush_finish_sec) 1
   set_schedd_config sched_conf
}

proc issue_2743_cleanup {} {
   delete_all_jobs
   wait_for_end_of_all_jobs
   reset_schedd_config
}


proc issue_2743_test {} {
   global ts_config CHECK_USER

   # let's assume we need 2 test hosts
   set test_host [host_conf_get_suited_hosts]

   # submit the pe job
   set qsub_params "-l h=$test_host,h_rt=30 -o /dev/null -j y -b y /bin/sleep 400"
   set job_id [submit_job "$qsub_params"]

   wait_for_jobstart $job_id "sleep" 100 1 1

   soft_execd_shutdown $test_host 
  
   ts_log_fine "now sleeping for 30 seconds ..."
   after 30000
   ts_log_fine "wakeup!"

   startup_execd $test_host

   # wait for termination of job
   wait_for_job_end $job_id  5
}

