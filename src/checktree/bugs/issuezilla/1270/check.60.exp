#!/vol2/TCL_TK/glinux/bin/expect --
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# Define the global veriables to give them back
global check_name check_description check_needs check_functions check_errno check_errstr check_highest_level
global check_init_level_procedure check_category

set check_init_level_procedure "issue_1270_init_level"

set check_category            "COMPATIBILITY SYSTEM VERIFIED"
set check_name                "issue_1270"
set check_description(0)      "drmaa_syncronize() doesn't ignore new jobs"
set check_needs               "init_core_system"      ;# dependencies of this check (name of other check)
set check_root_access_needs   "yes"

# setup and cleanup functions
set check_setup_function "issue_1270_setup"
set check_cleanup_function "issue_1270_cleanup"

# define test's procedure order
set check_functions           ""
lappend check_functions       "issue_1270_run"
set check_highest_level       0

proc issue_1270_init_level {} {
   global CHECK_ACT_LEVEL ts_config

   # setup levels 
   switch -- $CHECK_ACT_LEVEL {
      "0"  { 
         return 0
      }
   }
   return -1
}

proc issue_1270_setup  {} {
   delete_all_jobs
   wait_for_end_of_all_jobs 60

   set_error 0 "ok"
}

proc issue_1270_run  {} {
   global ts_config CHECK_USER

   set up_arch [resolve_build_arch_installed_libs $ts_config(master_host)]
   set client_binary $ts_config(source_dir)/$up_arch/test_drmaa_sync
   set client_args "$ts_config(product_root)/examples/jobs/sleeper.sh"

   set output [start_remote_prog $ts_config(master_host) $CHECK_USER $client_binary $client_args prg_exit_state 600]

   if { $prg_exit_state <= 0 } {
      add_proc_error "issue_1270_run" "-1" "drmaa_synchronize() did not ignore new jobs:\n$output"
   }

   set_error 0 "ok"
}

proc issue_1270_cleanup {} {
   delete_all_jobs
   wait_for_end_of_all_jobs 60

   set_error 0 "ok"
}
