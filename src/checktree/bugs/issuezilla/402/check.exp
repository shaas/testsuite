#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_errno 
global check_errstr 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"


# define a level initialization procedure:
set check_init_level_procedure "issue_402_init_level"

# define test's name and run level descriptions
set check_name            "issue_402"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "qsub -t 1-1:1 should create an array job with one task and not a singe job"

# define test's dependencies
set check_needs           "init_core_system" 


# setup and cleanup functions
set check_cleanup_function "issue_402_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_402_check"

proc issue_402_init_level {} {
   global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      "0" { 
         return 0    
      } 
   }

   return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_402_check {} {
   global CHECK_OUTPUT CHECK_PRODUCT_ROOT CHECK_ARCH
 
   #
   # Scenario:
   #  Submit an array job using 1-1:1 as task range specification
   #  Try to find the task id 1 in qstat output 
   #     -> if the task id is not found in the output then the bug
   #        is present 
   #  Watch the job execution
   #     -> now we can be really sure that the bug is not here
   #
   set job_name "Sleeper"
   set job_script "$CHECK_PRODUCT_ROOT/examples/jobs/sleeper.sh"
   set job_sleep_time "10"
   set job_t_param "-t 1-1:1"
   set qsub_arguments "$job_t_param $job_script $job_sleep_time"
   set job_id [submit_job $qsub_arguments 0]
   set qstat_output [get_standard_job_info $job_id]
   set first_qstat_line [lindex $qstat_output 0]
   set task_id [lindex $first_qstat_line 7]
   if { [string compare $task_id "1" ] != 0 } {
      add_proc_error "binary_submission_check" "-1" \
               "Submitted job is not an Array Job" 
   } 
   wait_for_jobstart $job_id $job_name 300
   wait_for_jobend $job_id $job_name 20
 
   set_error 0 "ok"
}

proc issue_402_cleanup  {} {
   global CHECK_OUTPUT

   delete_all_jobs

   set_error 0 "ok"
}



