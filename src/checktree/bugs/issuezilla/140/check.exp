#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"


# define a level initialization procedure:
set check_init_level_procedure "issue_140_init_level"

# define test's name and run level descriptions
set check_name            "issue_140"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "do a qsub -t 1-3, qdel <jid>.1-4, qmaster should not core dump"

# define test's dependencies
set check_needs           "init_core_system"

# setup and cleanup functions
set check_cleanup_function "issue_140_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_140_check"

proc issue_140_init_level {} {
   global CHECK_ACT_LEVEL

  switch -- $CHECK_ACT_LEVEL {
     "0" {
        return 0
     }
  }
  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_140_check {} {
   global ts_config
  
   # test running job array
   ts_log_fine "Starting job ..."
   set arguments "-o /dev/null -e /dev/null -t 1-3"
   set job_id [submit_job "$arguments $ts_config(product_root)/examples/jobs/sleeper.sh 1000"]

   ts_log_fine "Waiting for start of job tasks ${job_id}.1-3 ..."
   wait_for_jobstart $job_id "Sleeper" 60 1 1
   wait_for_end_of_transfer $job_id 60

   ts_log_fine "Delete job array $job_id.1-4"
   delete_job "${job_id}.1-4"

   wait_for_jobend $job_id "Sleeper" 60 0

   # test pending job array
   ts_log_fine "test with pending jobs ..."
   ts_log_fine "Starting job ..."
   set arguments "-o /dev/null -e /dev/null -h -t 1-3"
   set job_id [submit_job "$arguments $ts_config(product_root)/examples/jobs/sleeper.sh 1000"]

   ts_log_fine "Waiting for job ${job_id} to get in pending state ..."
   wait_for_jobpending $job_id "Sleeper" 60
 
   ts_log_fine "Delete job array $job_id.1-4"
   delete_job "${job_id}.1-4"

   wait_for_end_of_all_jobs 60 

   ts_log_fine "check if master and scheduler are running ..."
   set back [are_master_and_scheduler_running $ts_config(master_host) [get_qmaster_spool_dir]]
   if {$ts_config(gridengine_version) < 62} {
      set expected_back 3
   } else {
      set expected_back 2
   }
   if {$back != $expected_back} {
      ts_log_severe "are_master_and_scheduler_running returns $back"
   }   
}

proc issue_140_cleanup {} {
   global ts_config

   delete_all_jobs
   wait_for_end_of_all_jobs
}

