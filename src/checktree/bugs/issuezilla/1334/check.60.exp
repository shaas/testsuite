#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

global issue_1334_job_stdout_file
global issue_1334_job_stderr_file

#set check_root_access_needs "no"


# define a level initialization procedure:
set check_init_level_procedure "issue_1334_init_level"

# define test's name and run level descriptions
set check_name            "issue_1334"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "starter_method is ignored with binary jobs that are started without a shell"

# define test's dependencies
set check_needs           "init_core_system" 


# setup and cleanup functions
set check_setup_function "issue_1334_setup"
set check_cleanup_function "issue_1334_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_1334_run"


proc issue_1334_init_level {} {
   global CHECK_ACT_LEVEL
   global CHECK_PRODUCT_TYPE
   global test_array_jobs 

  switch -- $CHECK_ACT_LEVEL {
     "0" {
        return 0
     }
  }

  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_1334_setup {} {
   global CHECK_ACTUAL_TEST_PATH CHECK_PROTOCOL_DIR
   global issue_1334_job_stdout_file issue_1334_job_stderr_file
   
   set issue_1334_job_stdout_file "$CHECK_PROTOCOL_DIR/iz_1334.stdout"
   set issue_1334_job_stderr_file "$CHECK_PROTOCOL_DIR/iz_1334.stderr"
   
   # create a queue with a termination_method
   set queue_conf(starter_method)  "$CHECK_ACTUAL_TEST_PATH/jobstarter.sh"
   add_queue "iz_1334" "@allhosts" queue_conf 1

   delete_file $issue_1334_job_stdout_file 0
   delete_file $issue_1334_job_stderr_file 0
}

proc issue_1334_cleanup  {} {
   global ts_config
   global issue_1334_job_stdout_file issue_1334_job_stderr_file
   
   delete_all_jobs
   wait_for_end_of_all_jobs 60
   
   ts_log_fine "delete test queue"
   del_queue "iz_1334" "@allhosts" 0 1
   
   # delete the job stdout and stderr file
   delete_file $issue_1334_job_stdout_file 0
   delete_file $issue_1334_job_stderr_file 0
}

proc issue_1334_run {} {
   global ts_config CHECK_USER
   global issue_1334_job_stdout_file issue_1334_job_stderr_file
   
   set option "-o $issue_1334_job_stdout_file -e $issue_1334_job_stderr_file"
   
   #
   #  Submit a binary job with no shell
   #
   set my_job [submit_job "-q iz_1334  $option -shell n -b y /bin/true"]
   if {$my_job < 0} {
     ts_log_severe "submit job failed"
     return
   }
 
   # wait until job ran through
   if {[wait_for_jobend $my_job "" 60 0]} {
      ts_log_severe "job was not running"
      return
   }
  
   ts_log_fine "waiting for file $issue_1334_job_stdout_file"
   set res [wait_for_remote_file $ts_config(master_host) $CHECK_USER $issue_1334_job_stdout_file 120]
   
   if {$res != 0} {
      ts_log_severe "stdout file $issue_1334_job_stdout_file of job $my_job not found"
      return
   }
   
   #
   # Hence the job starter had been invoked the stdout file must contain
   # the pattern SGE_STARTER_SHELL_PATH
   #
   set output [start_remote_prog $ts_config(master_host) $CHECK_USER "cat" "$issue_1334_job_stdout_file"]
   if {[string match "*SGE_STARTER_SHELL_PATH*" $output] != 1} {
      ts_log_severe "jobstarter was not invoked (1)"
      return
   }
   
   ts_log_fine "content of job output file $issue_1334_job_stdout_file:\n$output\n"
   
   delete_file $issue_1334_job_stdout_file
   delete_file $issue_1334_job_stderr_file
   
   #
   #  Submit a binary job with a shell
   #
   set my_job [submit_job "-q iz_1334  $option -shell y -b y /bin/true"]
   if {$my_job < 0} {
     ts_log_severe "submit job failed"
     return
   }
   
   # wait until job ran through
   if {[wait_for_jobend $my_job "" 60 0]} {
      ts_log_severe "job was not running"
      return
   }
  
   ts_log_fine "waiting for file $issue_1334_job_stdout_file"
   set res [wait_for_remote_file $ts_config(master_host) $CHECK_USER $issue_1334_job_stdout_file 120]
   
   if {$res != 0} {
      ts_log_severe "stdout file $issue_1334_job_stdout_file of job $my_job not found"
      return
   }

   #
   # Hence the job starter had been invoked the stdout file must contain
   # the pattern SGE_STARTER_SHELL_PATH
   #
   set output [start_remote_prog $ts_config(master_host) $CHECK_USER "cat" "$issue_1334_job_stdout_file"]
   if {[string match "*SGE_STARTER_SHELL_PATH*" $output] != 1} {
      ts_log_severe "jobstarter was not invoked (2)"
      return
   }
   ts_log_fine "content of job output file $issue_1334_job_stdout_file:\n$output\n"

   delete_file $issue_1334_job_stdout_file
   delete_file $issue_1334_job_stderr_file
}



