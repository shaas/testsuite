#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_errno 
global check_errstr 
global check_highest_level
global check_init_level_procedure
global check_root_access_needs
global env

# set check_root_access_needs "yes"


# define a level initialization procedure:
set check_init_level_procedure "issue_1798_init_level"

# define test's name and run level descriptions
set check_name            "issue_1798"
set check_category        "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_highest_level   0
set check_description(0)  "try to produce a core of qmaster using the qconf -mattr command"

# define test's dependencies
set check_needs           "init_core_system" 


# setup and cleanup functions
set check_setup_function "issue_1798_setup"
set check_cleanup_function "issue_1798_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_1798_test"

proc issue_1798_init_level {} {
   global CHECK_ACT_LEVEL
   global CHECK_PRODUCT_TYPE
   global test_array_jobs 

   switch -- $CHECK_ACT_LEVEL {
      "0" { 
         return 0    
      } 
   } 

   return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

proc issue_1798_setup  {} {
   global CHECK_OUTPUT CHECK_PROTOCOL_DIR CHECK_PRODUCT_ROOT CHECK_ARCH

   set_error 0 "ok"
}

proc issue_1798_cleanup  {} {
   global CHECK_OUTPUT CHECK_PRODUCT_ROOT CHECK_ARCH CHECK_CORE_MASTER

   set back [ are_master_and_scheduler_running $CHECK_CORE_MASTER [get_qmaster_spool_dir]]
   if { $back != 3 } {
      startup_qmaster 0
   }

   set catch_return [ catch {
      eval exec "$CHECK_PRODUCT_ROOT/bin/$CHECK_ARCH/qconf -dattr exechost complex_values slots=1 global"
   } result ]
   if { $catch_return != 0 } {
      add_proc_error "issue_1798_test" -1 "qconf -dattr error"
   }


   set_error 0 "ok"
}

proc issue_1798_test {} {
   global CHECK_OUTPUT CHECK_ACTUAL_TEST_PATH CHECK_CORE_MASTER CHECK_ARCH CHECK_PRODUCT_ROOT

   #
   # Scenario:
   #     add at least one entry to the complex values of the global host
   #     execute following command: 
   #        qconf -mattr exechost complex_values = global
   #     if the master cores the bug is present
   #
   #

   set catch_return [ catch {
      eval exec "$CHECK_PRODUCT_ROOT/bin/$CHECK_ARCH/qconf -mattr exechost complex_values slots=1 global"
   } result ]
   if { $catch_return != 0 } {
      add_proc_error "issue_1798_test" -1 "error: qconf -mattr exechost complex_values slots=1 global"
   }

   set catch_return [ catch {
      eval exec "$CHECK_PRODUCT_ROOT/bin/$CHECK_ARCH/qconf -mattr exechost complex_values = global"
   } result ]
   if { $catch_return != 1 } {
      add_proc_error "issue_1798_test" -2 "error: qconf -mattr exechost compl
ex_values = global caused core of master"
      set_error -2 "IZ 1798 is present"
      return -2
   }

   set_error 0 "ok"
}

