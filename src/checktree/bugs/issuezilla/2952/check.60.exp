#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# define global variable in this namespace
global check_name 
global check_category
global check_description 
global check_needs
global check_functions 
global check_highest_level
global check_init_level_procedure

# define a level initialization procedure:
set check_init_level_procedure "issue_2952_init_level"

# define test's name and run level descriptions
set check_name            "issue_2952"
set check_category        "COMPATIBILITY SYSTEM"
set check_highest_level   0
set check_description(0)  "check memory consumption for array job 1 is the whole sum"

# define test's dependencies
set check_needs           "init_core_system" 

# setup and cleanup functions
set check_cleanup_function "issue_2952_cleanup"

# define test's procedure order
set check_functions ""
lappend check_functions "issue_2952_check"

# this function is called each time before
# a new run level is started
proc issue_2952_init_level {} {
  global CHECK_ACT_LEVEL

  # returning -1 causes disabling a certain runlevel
  # here per run level settings can be prepared
  switch -- $CHECK_ACT_LEVEL {
     "0" { 
           return 0
     } 
  } 
  return -1  ;# no other level else
}

# -------- local test procedures -----------------------------------------------

# here the actual test is done
proc issue_2952_check {} {
   global ts_config 
   global CHECK_USER 

   # submit array job with 5 workers a 10 seconds 
   set amount 5
   set runtime 10
   set id_1 [issue_2952_submit_array_workers $amount $runtime]
   if {$id_1 <= 0} {
      return
   } 
   trigger_scheduling

   ts_log_fine "now waiting for end of job ..."
   wait_for_end_of_all_jobs

   if {[get_qacct $id_1 qacct_info "" $CHECK_USER 1 $amount 60 0] == 0} {
      # this should be then a list 
      ts_log_fine "Got memory from array job: $qacct_info(mem)"
      set entries [llength $qacct_info(mem)]
      if {$entries == $amount} {
         # sum up second to last entry 
         set sum 0
         set is_first 1 
         set first 0
         foreach mem $qacct_info(mem) {
            if {$is_first == 1} {
               set first $mem
               set is_first 0
               continue
            }
            ts_log_fine "adding memory... $mem" 
            set sum [expr $sum + $mem]
          }
          # check if first task consumes more memory than remaining tasks
          ts_log_fine "First task has: $mem"
          ts_log_fine "Remain tasks summed up: $sum" 

          if {$first >= $sum} {
             ts_log_severe "Found bug 2952: First tasks memory consumption is the sum for all array tasks!"
          } else {
             ts_log_fine "Memory consumption of first task is NOT the sum for all array tasks!"
          } 
          
      } else {
         ts_log_severe "The amount of memory entries from qacct is incorrect ($entries)!"
       }
   } else {
      ts_log_severe "Couldn't get accounting records for array job!"
   }
   

}

proc issue_2952_submit_array_workers {workers runtime} {
   global ts_config 
   # because it is an array job argument
   set jobargs "-t 1-$workers -o /dev/null -e /dev/null $ts_config(product_root)/examples/jobs/worker.sh $runtime"
   set id [submit_job $jobargs]   
   return $id 
}


proc issue_2952_cleanup {} {
   delete_all_jobs
   wait_for_end_of_all_jobs
}
