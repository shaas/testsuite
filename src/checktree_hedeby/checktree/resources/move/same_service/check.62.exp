#!/vol2/TCL_TK/glinux/bin/expect
# ___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2009 by Sun Microsystems, Inc
#
#  All Rights Reserved.
#
##########################################################################
# ___INFO__MARK_END__


# source version dependend parts of the installation
global CHECK_ACTUAL_TEST_PATH CHECK_TESTSUITE_INSTALL_MODE
global check_name check_description check_needs check_functions
global check_root_access_needs check_category      
global check_use_installed_system check_init_level_procedure

# This file shows some check specific things
set check_root_access_needs    "yes"
set check_name                 "hedeby_move_same_service"
set check_category             "COMPATIBILITY SYSTEM L10N VERIFIED"
set check_description(0)       "test resource move from a service to same service"
set check_needs                "hedeby_install"                  
set check_init_level_procedure "hedeby_move_same_service_init_level"
set check_functions            {}   
set check_highest_level        0

set check_setup_level_function "hedeby_move_same_service_setup"
set check_cleanup_level_function "hedeby_move_same_service_cleanup"

lappend check_functions "hedeby_move_same_service_check"

# ---------------------------------------------------------------------------------
# here the tests begin ....


#****** resource/move/same_service/hedeby_move_same_service_init_level() ************************
#  NAME
#     hedeby_move_same_service_init_level() -- init level procedure for test
#
#  SYNOPSIS
#     hedeby_move_same_service_init_level { } 
#
#  FUNCTION
#     Return the supported runlevel of this test. Currently only level 0 is supported.
#
#  INPUTS
#
#  RESULT
#     0 for CHECK_ACT_LEVEL 0
#    -1 for all other levels
#
#*******************************************************************************
proc hedeby_move_same_service_init_level {} {
  global CHECK_ACT_LEVEL

  if { $CHECK_ACT_LEVEL == 0 } {
     return 0
  }
  
  return -1
}

#****** resource/move/same_service/hedeby_move_same_service_setup() *****************************
#  NAME
#     hedeby_move_same_service_setup() -- prepare test setup
#
#  SYNOPSIS
#     hedeby_move_same_service_setup { } 
#
#  FUNCTION
#     This method sets up the test for the runlevel. It stores the following
#     values in  hedeby_move_same_service_ctx
#
#      this(res) - a randomly picked spare_pool resource
#
#*******************************************************************************
proc hedeby_move_same_service_setup {} {
   global hedeby_move_same_service_ctx this

   set this(res) [pick_random [get_all_spare_pool_resources]]
}

#****** resource/move/same_service/hedeby_move_same_service_cleanup() ***************************
#  NAME
#     hedeby_move_same_service_cleanup() -- perform cleanup for this test
#
#  SYNOPSIS
#     hedeby_move_same_service_cleanup { } 
#
#  FUNCTION
#     No cleanup necessary.
#
#*******************************************************************************
proc hedeby_move_same_service_cleanup {} {
   global hedeby_move_same_service_ctx this

   unset this
}

#****** resource/move/same_service/hedeby_move_same_service_check() *****************************
#  NAME
#     hedeby_move_same_service_check() -- move a resource from spare_pool to spare_pool must fail
#
#  SYNOPSIS
#     hedeby_move_same_service_check { } 
#
#  FUNCTION
#     Move selected resource $this(res) from spare_pool to spare_pool
#
#*******************************************************************************
proc hedeby_move_same_service_check {} {
   global hedeby_move_same_service_ctx this

   # ---------------------------------------------------------------------------------------------
   ts_log_heading "Moving resource $this(res) from spare_pool to spare_pool"
   # ---------------------------------------------------------------------------------------------
   set opt(raise_error) 0
   sdmadm_command_opt "mvr -r $this(res) -s spare_pool" opt
   if {$prg_exit_state == 0} {
      ts_log_severe "Move of resource $this(res) succeeded unexpectedly!"
   }
}

