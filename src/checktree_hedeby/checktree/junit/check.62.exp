#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2008 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__


# source version dependent parts of the installation
global CHECK_ACTUAL_TEST_PATH CHECK_TESTSUITE_INSTALL_MODE

global check_name check_description check_needs check_functions
global check_root_access_needs check_category check_highest_level      
global check_use_installed_system check_init_level_procedure

# This file shows some check spezific things
set check_root_access_needs    "yes"
set check_name                 "hedeby_junit"
set check_category             "COMPATIBILITY SYSTEM VERIFIED"
set check_description(0)       "Executes the Hedeby junit tests"
set check_needs                ""
set check_init_level_procedure "hedeby_junit_init_level"

set check_highest_level        0

set check_setup_level_function ""
set check_cleanup_level_function ""

set check_functions            {}
lappend check_functions "hedeby_junit_check"


#****** check/hedeby_junit_init_level() ************************************************************
#  NAME
#    hedeby_junit_init_level() -- init level function
#
#  SYNOPSIS
#    hedeby_junit_init_level { } 
#
#***************************************************************************************************
proc hedeby_junit_init_level {} {
  global CHECK_ACT_LEVEL

   switch -- $CHECK_ACT_LEVEL {
      "0" {
         return 0
      }
      default {
         return -1
      }
   }
}

#****** check/hedeby_junit_check() *****************************************************************
#  NAME
#    hedeby_junit_check() -- executes the hedeby junit tests
#
#  SYNOPSIS
#    hedeby_junit_check { } 
#
#  FUNCTION
#     executes the hedeby junit tests on the java build host
#
#  INPUTS
#
#  RESULT
#     no result
#
#  SEE ALSO
#     checktree_hedeby/hedeby_build()
#***************************************************************************************************
proc hedeby_junit_check {} {
   global hedeby_config 
   global ts_config

   set java_build_host [host_conf_get_java_compile_host]
   
   report_create "hedeby_junit_tests" report 1 0
   report_add_message report "java build host is \"$java_build_host\""

   set cs_port 0
 
   # Try to find a user reserved port for the cs jvm of dummy systems
   # for the junit tests.
   #

   # If the java_build_host is not equal to the hedeby master host we can
   # reuse the cs port of the hedeby system

   if { $java_build_host != $hedeby_config(hedeby_master_host) } {
      set cs_port $hedeby_config(hedeby_cs_port)
      ts_log_fine "Using cs port of Hedeby for junit tests ($cs_port)"
   } else {
      # Go through the testsuite managed cluster and find the first system
      # where the qmaster is not running in the java build host
      # Use the SGE_QMASTER_PORT of this cluster as CS port for the dummy systems

      foreach filename $ts_config(additional_config) {
         get_additional_config $filename add_config
         if { $java_build_host != $add_config(master_host) } {
             set cs_port $add_config(commd_port)
             ts_log_fine "Using qmaster port of cluster $add_config(cluster_name) for junit tests ($cs_p rt)"
             break
         }
      }
   }
   
   if { $cs_port == 0 } {
      set cs_port 7778
      ts_log_fine "Using default cs port for junit tests ($cs_port)"
   }

   # The timeout occurs if a junit does not output anything for 5 minutes 
   set timeout 2700 ;# 45 minutes

   set junit_result_dir "$ts_config(results_dir)/hedeby_junit_results/[clock seconds]"

   set ant_options "-Dcs_dummy_port=$cs_port -Dtest.report.dir=\"$junit_result_dir\""
   
   set res [hedeby_build $java_build_host "clean testAndReport" report $ant_options $timeout]
   if { $res != 0 } {
      report_add_message report "Hedeby junit tests failed"
      report_finish report -1
      ts_log_severe "Hedeby junit tests failed\nResults stored at $junit_result_dir/index.html"
      return
   } else {
      report_add_message report "Hedeby junit successfully executed\nResults stored at $junit_result_dir/index.html"
      report_finish report 0
      return
   }
}

