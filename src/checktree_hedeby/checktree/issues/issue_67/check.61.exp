#!/vol2/TCL_TK/glinux/bin/expect
# ___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2006 by Sun Microsystems, Inc
#
#  All Rights Reserved.
#
##########################################################################
# ___INFO__MARK_END__


# source version dependent parts of the installation
global CHECK_ACTUAL_TEST_PATH CHECK_TESTSUITE_INSTALL_MODE
global check_name check_description check_needs check_functions
global check_root_access_needs check_category      
global check_use_installed_system check_init_level_procedure

# This file shows some check spezific things
set check_root_access_needs    "no"
set check_name                 "issue_67"
set check_category             "SYSTEM VERIFIED"
set check_description(0)       "wrong exit code if already running system is started"
set check_needs                "hedeby_install"                  
set check_init_level_procedure "issue_67_init_level"
set check_functions            ""   
set check_highest_level        0

set check_setup_function "issue_67_setup"
set check_cleanup_function "issue_67_cleanup"

lappend check_functions "issue_67_check"

# ---------------------------------------------------------------------------------
# here the tests begin ....
global issue_67_current_cluster_config


proc issue_67_init_level {} {
  global CHECK_ACT_LEVEL

  if { $CHECK_ACT_LEVEL == 0 } {
     return 0
  }
  return -1
}

proc issue_67_setup {} {
   global CHECK_OUTPUT
   global issue_67_current_cluster_config
   
   puts $CHECK_OUTPUT "doing setup ..."
   set issue_67_current_cluster_config [get_current_cluster_config_nr]
}

proc issue_67_cleanup {} {
   global CHECK_OUTPUT
   global issue_67_current_cluster_config

   puts $CHECK_OUTPUT "doing cleanup ..."

   set_current_cluster_config_nr $issue_67_current_cluster_config
}

proc issue_67_check {} {
   global CHECK_OUTPUT
   global hedeby_config

   set host $hedeby_config(hedeby_master_host)
   set user [get_hedeby_startup_user]

   set match_str  [create_bundle_string "ParentStartupService.skipRunningJvm" xyz "*"]
   set match_str2 [create_bundle_string "ParentStartupService.skippedRunningJvms" xyz "*"]
   set expected_str "WARNING: ${match_str}\r\nWARNING: ${match_str}\r\nWARNING: ${match_str}\r\nError: ${match_str2}"

   # start system on master host again, don't raise errors ...
   set output [sdmadm_command $host $user "-p [get_hedeby_pref_type] -s [get_hedeby_system_name] suj" prg_exit_state "" 0]
   set ret $prg_exit_state

   # now check the output ...
   if { [string match "*$expected_str*" $output] } {
      puts $CHECK_OUTPUT "output matches expected result!"
   } else {
      add_proc_error "issue_67_check" -1 "expected output does not match!:\noutput   : \"$output\"\nmatch str: \"$expected_str\""
   }

   # now check the exit state ...
   puts $CHECK_OUTPUT "exit state of sdmadm start command is \"$ret\""
   if { $ret == 0 } {
      add_proc_error "issue_67_check" -1 "issue 67 encountered: exit state is not set != 0 on startup error"
   }
}



